SQLZ>
	(User)
		(...options)
			(defaultScope={ where: { active: true } })
			(omitNull=false)
			(timestamps=true)
			(paranoid=false)
			(underscored=false)
			(underscoredAll=false)
			(freezeTableName=false)
			(createdAt=true)
			(updatedAt=true)
			(deletedAt=true)
			(tableName='users')
			(schema='public')
			(engine='InnoDB')
			(charset='UTF-8')
			(comment='The user table')
			(collate='ABC')
			(initialAutoIncrement='1')
		(...name)
			(singular='user')
			(plural='users')
		(...columns)
			(id.primaryKey.autoIncrement(type=DataTypes.INTEGER))
				(comment='The primary key')
				(references(model='modelref', key='modelkey'))
				(onUpdate='CASCADE')
				(onDelete='CASCADE')
				(get=() => { return this.getDataValue('id'); })
				(set=(val) => { this.setDataValue('id', val); })
				(validate.isEmail.isUrl.isIP.isIPv4.isIPv6.isAlpha.isAlphanumeric.isInt)
					(notNull(msg='id can not be null'))
					(isEven=(val) => { throw new Error('Bad validation'); })

			(firstName.allowNull.unique(type=DataTypes.STRING))
			(lastName(type=DataTypes.STRING(1234)))
		(...getters)
		(...setters)
		(...validate)
		(...indexes)
		(...associations)
		(...scopes)
		(...hooks)
		(...classMethods)
		(...instanceMethods)
